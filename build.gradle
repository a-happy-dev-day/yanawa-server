plugins {
	id 'org.springframework.boot' version '2.6.9'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id "org.sonarqube" version "3.4.0.2513"
}

group = 'fashionable.simba'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}



sonarqube {
	properties {
		property "sonar.projectKey", "a-happy-dev-day_yanawa-court-api"
		property "sonar.organization", "a-happy-dev-day"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

test{
	useJUnitPlatform()
	finalizedBy 'jacocoTestReport'
}

jacoco {
	toolVersion = "0.8.7"
	reportsDirectory = layout.buildDirectory.dir('jacocoDir')
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
	finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			enabled = true
			// 클래스 단위로 커버리지 체크
			element = 'CLASS'

			// 라인 커버리지 제한을 90%로 설정
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.90
			}

			// 브랜치 커버리지 제한을 90%로 설정
			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.90
			}

			excludes = ["*.YanawaserverApplication"]
		}
	}
}
